{"version":3,"file":"static/js/736.401cf43d.chunk.js","mappings":"uPAEaA,EAAOC,EAAAA,GAAAA,GAAH,qFAMJC,EAAOD,EAAAA,GAAAA,GAAH,gEAKJE,EAAMF,EAAAA,GAAAA,IAAH,gHAOHG,EAAOH,EAAAA,GAAAA,IAAH,yIAQJI,EAASJ,EAAAA,GAAAA,EAAH,+C,SCSnB,EAhCa,WACT,IAAQK,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KAQA,OANAC,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,GAAUN,GAAIO,MAAK,SAAAC,GACfJ,EAAQI,EACX,GACJ,GAAE,CAACR,IAGAG,IACI,SAACT,EAAD,UACKS,EAAKM,KAAI,YAA0C,IAAxCT,EAAuC,EAAvCA,GAAIU,EAAmC,EAAnCA,UAAWC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,aAC7B,OACI,UAAChB,EAAD,WACKgB,GAAgB,SAACf,EAAD,CACbgB,IAAG,2CAAsCD,GACzCE,IAAG,oBAAeH,GAClBI,QAAQ,UACL,SAACjB,EAAD,gCAEP,SAACC,EAAD,UAASY,KACT,uCAAeD,OARRV,EAWlB,KAIhB,C,8LCjCKgB,EAAQ,mCAEP,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6FACGC,EADH,kEACoEF,EADpE,oBAEoBG,EAAAA,EAAAA,IAAUD,GAF9B,cAEGE,EAFH,yBAIIA,EAASC,KAAKC,SAJlB,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAkCC,GAAlC,kFACGN,EADH,4DAC8DF,EAD9D,kBAC+EQ,EAD/E,oBAEoBL,EAAAA,EAAAA,IAAUD,GAF9B,UAEGE,EAFH,OAKoB,KAFjBE,EAAUF,EAASC,KAAKC,SAElBG,SAAgBD,EALzB,sBAMK,IAAIE,MAAM,0EANf,gCASIJ,GATJ,kEAYA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA8B3B,GAA9B,gFACGkB,EADH,6CAC+ClB,EAD/C,oBAC6DgB,EAD7D,4BAEoBG,EAAAA,EAAAA,IAAUD,GAF9B,cAEGE,EAFH,yBAIIA,EAASC,MAJb,kEAOA,SAAef,EAAtB,+CAAO,OAAP,oBAAO,WAAyBN,GAAzB,gFACGkB,EADH,6CAC+ClB,EAD/C,4BACqEgB,EADrE,4BAEoBG,EAAAA,EAAAA,IAAUD,GAF9B,cAEGE,EAFH,yBAIIA,EAASC,KAAKlB,MAJlB,kEAQA,SAAeyB,EAAtB,+CAAO,OAAP,oBAAO,WAA4B5B,GAA5B,kFACGkB,EADH,6CAC+ClB,EAD/C,4BACqEgB,EADrE,mCAEoBG,EAAAA,EAAAA,IAAUD,GAF9B,UAEGE,EAFH,OAKoB,KAFjBE,EAAUF,EAASC,KAAKC,SAElBG,OALT,sBAMK,IAAIC,MAAM,6CANf,gCAQIJ,GARJ,kE","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","services/api-movies-service.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const List = styled.ul`\n    display: flex;\n    flex-wrap: wrap;\n    margin: 10px;\n`;\n\nexport const Item = styled.li`\n    margin: 10px;  \n    width: 140px;\n`;\n\nexport const Img = styled.img`\n    width: 140px;\n    height: 210px;\n    border-radius: 5px;\n    object-fit: cover;\n`;\n\nexport const Plug = styled.div`\n    width: 120px;\n    height: 190px;\n    padding: 10px;\n    border-radius: 5px;\n    background-color: grey;\n`;\n\nexport const Accent = styled.p`\n   font-weight: bold;\n`;","import { useEffect, useState } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport { fetchCast } from \"services/api-movies-service\";\nimport { List, Item, Img, Plug, Accent } from \"components/Cast/Cast.styled\";\n\nconst Cast = () => {\n    const { id } = useParams();\n    const [cast, setCast] = useState(null);\n\n    useEffect(() => {\n        fetchCast(id).then(movieCast => {\n            setCast(movieCast);\n        });\n    }, [id]);\n\n    return (\n        cast && (\n            <List>\n                {cast.map(({id, character, name, profile_path}) => { \n                    return (\n                        <Item key={id}>\n                            {profile_path ? (<Img\n                                src={`https://image.tmdb.org/t/p/w1280/${profile_path}`}\n                                alt={`Poster of ${name}`}\n                                loading=\"lazy\"\n                            />) :  <Plug>Poster not found</Plug>}\n                            \n                            <Accent>{name}</Accent>\n                            <p>Character: {character}</p>\n                        </Item>\n                    )\n                })}   \n            </List>  \n        )\n    );\n};\n\nexport default Cast;","import axios from \"axios\";\n\nconst API_KEY='115b567d77b04428b1251a93b22d9778';\n\nexport async function fetchTrendingMovies () {  \n    const URL = `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}&page=1`;\n    const response = await axios.get(URL);\n\n    return response.data.results;\n}\n\nexport async function fetchMoviesByName (query) {  \n    const URL = `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${query}&page=1`;\n    const response = await axios.get(URL);\n    const results = response.data.results;\n\n    if (results.length === 0 && query) {\n      throw new Error(\"Search result not successful. Enter the correct movie name and repeat.\");\n    }\n\n    return results;\n}\n\nexport async function fetchMoiveByID(id) {\n    const URL = `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US`;\n    const response = await axios.get(URL);\n\n    return response.data;\n}\n\nexport async function fetchCast(id) {\n    const URL = `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`;\n    const response = await axios.get(URL);\n\n    return response.data.cast;\n;\n}\n\nexport async function fetchReviews(id) {\n    const URL = `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`;\n    const response = await axios.get(URL);\n    const results = response.data.results;\n\n    if (results.length === 0) {\n      throw new Error(\"We don't have any reviews for this movie.\");\n    }\n    return results;\n;\n}"],"names":["List","styled","Item","Img","Plug","Accent","id","useParams","useState","cast","setCast","useEffect","fetchCast","then","movieCast","map","character","name","profile_path","src","alt","loading","API_KEY","fetchTrendingMovies","URL","axios","response","data","results","fetchMoviesByName","query","length","Error","fetchMoiveByID","fetchReviews"],"sourceRoot":""}