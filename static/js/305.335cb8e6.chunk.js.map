{"version":3,"file":"static/js/305.335cb8e6.chunk.js","mappings":"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","sources":["components/BackLink/BackLink.styled.jsx","components/BackLink/BackLink.jsx","components/Movie/Movie.styled.jsx","components/Movie/Movie.jsx","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx","services/api-movies-service.js"],"sourcesContent":["import { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport const StyledLink = styled(Link)`\n  display: inline-block;\n  margin: 20px 0 0 20px;\n  padding: 8px 16px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: white;\n  background-color: green;\n  font-weight: 500;\n\n  :hover {\n    box-shadow: rgba(50, 50, 93, 0.25) 0px 30px 60px -12px inset, rgba(0, 0, 0, 0.3) 0px 18px 36px -18px inset;\n  }\n`;","import { PropTypes } from \"prop-types\";\nimport { StyledLink } from \"components/BackLink/BackLink.styled\";\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      {children}\n    </StyledLink>\n  );\n};\n\nBackLink.propTypes = {\n  to: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.string,\n  ]).isRequired,\n  children: PropTypes.node,\n};","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  display: grid;\n  grid-template-columns: 220px 1fr ;\n  padding: 20px;  \n  box-shadow: 0 4px 4px rgb(0 0 0 / 25%); \n`;\n\nexport const Img = styled.img`\n  display: block;\n  width: 200px;\n  height: 300px;\n  border-radius: 5px;\n  object-fit: cover;\n`;\n\nexport const Plug = styled.div`\n  width: 200px;\n  height: 300px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: grey;\n`;","import {PropTypes} from \"prop-types\";\nimport { Container, Img, Plug } from \"components/Movie/Movie.styled\";\n\nconst getYear = (release_date) => {\n    let year = '';\n    \n    if (!release_date) {\n    return year;\n    }\n    year = ` (${release_date?.slice(0, 4)})`;\n    return year;\n}\n\nconst getGenreNames = (genres) => {\n    let genreNames = \"unknown\";\n\n    if (!genres) {\n        return genreNames;\n    }\n    genreNames = genres.map(genre => genre.name).join(\", \");\n    return genreNames;\n}\n\nexport const Movie = ({ movie }) => { \n    const { poster_path, genres, overview, title, release_date, vote_average } = movie;\n\n    const poster = poster_path ? (\n        <Img\n            src={`https://image.tmdb.org/t/p/w1280/${poster_path}`}\n            alt={`Poster of the film ${title}`}\n            loading=\"lazy\"\n        />\n    ) : <Plug>Poster not found</Plug>;   \n    \n    const userScore = (vote_average * 10).toFixed(0);\n\n    return (\n        <Container>\n            {poster}\n            <div>\n                <h2>{title}{getYear(release_date)}</h2>\n                <p>User Score {userScore}%</p>\n                <h3>Overview</h3>\n                <p>{overview}</p>\n                <h4>Genres</h4>\n                <p>{getGenreNames(genres)}</p>\n            </div>\n        </Container>\n    );\n};\n\nMovie.propTypes = {\n    poster_path: PropTypes.string,\n    genres: PropTypes.arrayOf(PropTypes.object),\n    overview: PropTypes.string,\n    title: PropTypes.string,\n    release_date: PropTypes.string,\n    vote_average: PropTypes.number,\n};","import { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n    padding: 20px;  \n    box-shadow: 0 4px 4px rgb(0 0 0 / 25%); \n`;\n\nexport const Item = styled.li`\n    margin-bottom: 8px; \n`;\n\nexport const StyledLink = styled(Link)`\n    color: black; \n\n    &:hover {\n        font-weight: bold;\n    }\n`;","import { useEffect, useState, Suspense } from 'react';\nimport { useParams, useLocation, Outlet } from \"react-router-dom\";\nimport { fetchMoiveByID } from \"services/api-movies-service\";\nimport { BackLink } from \"components/BackLink/BackLink\";\nimport { Movie } from \"components/Movie/Movie\";\nimport { Wrapper, Item, StyledLink } from \"pages/MovieDetails/MovieDetails.styled\"; \n\nconst MovieDetails = () => {\n    const { id } = useParams();\n    const location = useLocation();\n    const backLinkHref = location.state?.from ?? \"/\";\n\n    const [movie, setMovie] = useState(null);\n\n    useEffect(() => {\n        fetchMoiveByID(id).then(movie => {\n            setMovie(movie);\n        });\n    }, [id]);\n\n    return (\n        movie && (\n            <main>\n                <BackLink to={backLinkHref}>Go back</BackLink>\n                <Movie movie={movie} />\n                <Wrapper>\n                    <h3>Additional information</h3>\n                    <ul>\n                        <Item>\n                            <StyledLink to=\"cast\" id={id}>Cast</StyledLink>\n                        </Item>\n                        <Item>\n                            <StyledLink to=\"reviews\">Reviews</StyledLink>\n                        </Item>\n                    </ul>\n                </Wrapper>\n                <Suspense fallback={null}>\n                    <Outlet />\n                </Suspense>\n            </main>\n        )\n    );\n};\n\nexport default MovieDetails;","import axios from \"axios\";\n\nconst API_KEY='115b567d77b04428b1251a93b22d9778';\n\nexport async function fetchTrendingMovies () {  \n    const URL = `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}&page=1`;\n    const response = await axios.get(URL);\n\n    return response.data.results;\n}\n\nexport async function fetchMoviesByName (query) {  \n    const URL = `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${query}&page=1`;\n    const response = await axios.get(URL);\n    const results = response.data.results;\n\n    if (results.length === 0 && query) {\n      throw new Error(\"Search result not successful. Enter the correct movie name and repeat.\");\n    }\n\n    return results;\n}\n\nexport async function fetchMoiveByID(id) {\n    const URL = `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US`;\n    const response = await axios.get(URL);\n\n    return response.data;\n}\n\nexport async function fetchCast(id) {\n    const URL = `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`;\n    const response = await axios.get(URL);\n\n    return response.data.cast;\n;\n}\n\nexport async function fetchReviews(id) {\n    const URL = `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`;\n    const response = await axios.get(URL);\n    const results = response.data.results;\n\n    if (results.length === 0) {\n      throw new Error(\"We don't have any reviews for this movie.\");\n    }\n    return results;\n;\n}"],"names":["StyledLink","styled","Link","BackLink","to","children","Container","Img","Plug","getYear","release_date","year","slice","getGenreNames","genres","genreNames","map","genre","name","join","Movie","movie","poster_path","overview","title","vote_average","poster","src","alt","loading","userScore","toFixed","Wrapper","Item","id","useParams","backLinkHref","useLocation","state","from","useState","setMovie","useEffect","fetchMoiveByID","then","Suspense","fallback","API_KEY","fetchTrendingMovies","URL","axios","response","data","results","fetchMoviesByName","query","length","Error","fetchCast","cast","fetchReviews"],"sourceRoot":""}