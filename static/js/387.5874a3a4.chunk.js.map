{"version":3,"file":"static/js/387.5874a3a4.chunk.js","mappings":"mPAEaA,EAAOC,EAAAA,GAAAA,GAAH,2CAIJC,EAAeD,EAAAA,GAAAA,EAAH,2CAIZE,EAASF,EAAAA,GAAAA,EAAH,+C,SCyBnB,EA9BgB,WACZ,IAAQG,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KAQA,OANAC,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAaR,GACRS,MAAK,SAAAC,GAAY,OAAIN,EAAWM,EAAf,IACjBC,OAAM,SAAAN,GAAK,OAAIC,EAASD,EAAMO,QAAnB,GACnB,GAAE,CAACZ,KAGA,gCACKG,IACG,SAACP,EAAD,UACKO,EAAQU,KAAI,YAA8B,IAA3Bb,EAA0B,EAA1BA,GAAIc,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACxB,OACI,2BACI,SAAChB,EAAD,UAASe,KACT,uBAAIC,MAFCf,EAKhB,MAGRK,IAAS,SAACP,EAAD,UAAeO,MAGpC,C,8LC/BKW,EAAQ,mCAEP,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6FACGC,EADH,kEACoEF,EADpE,oBAEoBG,EAAAA,EAAAA,IAAUD,GAF9B,cAEGE,EAFH,yBAIIA,EAASC,KAAKC,SAJlB,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAkCC,GAAlC,kFACGN,EADH,4DAC8DF,EAD9D,kBAC+EQ,EAD/E,oBAEoBL,EAAAA,EAAAA,IAAUD,GAF9B,UAEGE,EAFH,OAKoB,KAFjBE,EAAUF,EAASC,KAAKC,SAElBG,SAAgBD,EALzB,sBAMK,IAAIE,MAAM,0EANf,gCASIJ,GATJ,kEAYA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA8B3B,GAA9B,gFACGkB,EADH,6CAC+ClB,EAD/C,oBAC6DgB,EAD7D,4BAEoBG,EAAAA,EAAAA,IAAUD,GAF9B,cAEGE,EAFH,yBAIIA,EAASC,MAJb,kEAOA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAAyB5B,GAAzB,gFACGkB,EADH,6CAC+ClB,EAD/C,4BACqEgB,EADrE,4BAEoBG,EAAAA,EAAAA,IAAUD,GAF9B,cAEGE,EAFH,yBAIIA,EAASC,KAAKQ,MAJlB,kEAQA,SAAerB,EAAtB,+CAAO,OAAP,oBAAO,WAA4BR,GAA5B,kFACGkB,EADH,6CAC+ClB,EAD/C,4BACqEgB,EADrE,mCAEoBG,EAAAA,EAAAA,IAAUD,GAF9B,UAEGE,EAFH,OAKoB,KAFjBE,EAAUF,EAASC,KAAKC,SAElBG,OALT,sBAMK,IAAIC,MAAM,6CANf,gCAQIJ,GARJ,kE","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","services/api-movies-service.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const List = styled.ul`\n    margin: 20px;\n`;\n\nexport const ErrorMessage = styled.p`\n    margin: 20px;\n`;\n\nexport const Accent = styled.p`\n   font-weight: bold;\n`;","import { useEffect, useState } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport { fetchReviews } from \"services/api-movies-service\";\nimport { List, Accent, ErrorMessage } from \"components/Reviews/Reviews.styled\";\n\nconst Reviews = () => {\n    const { id } = useParams();\n    const [reviews, setReviews] = useState(null);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        fetchReviews(id)\n            .then(movieReviews => setReviews(movieReviews))\n            .catch(error => setError(error.message))\n    }, [id]);\n\n    return (\n        <>\n            {reviews && \n                <List>\n                    {reviews.map(({ id, author, content }) => {\n                        return (\n                            <li key={id}>\n                                <Accent>{author}</Accent>\n                                <p>{content}</p>\n                            </li>\n                        )\n                    })}\n                </List>}\n            \n            {error && <ErrorMessage>{error}</ErrorMessage>}\n        </>\n    );\n};\n\nexport default Reviews;","import axios from \"axios\";\n\nconst API_KEY='115b567d77b04428b1251a93b22d9778';\n\nexport async function fetchTrendingMovies () {  \n    const URL = `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}&page=1`;\n    const response = await axios.get(URL);\n\n    return response.data.results;\n}\n\nexport async function fetchMoviesByName (query) {  \n    const URL = `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${query}&page=1`;\n    const response = await axios.get(URL);\n    const results = response.data.results;\n\n    if (results.length === 0 && query) {\n      throw new Error(\"Search result not successful. Enter the correct movie name and repeat.\");\n    }\n\n    return results;\n}\n\nexport async function fetchMoiveByID(id) {\n    const URL = `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US`;\n    const response = await axios.get(URL);\n\n    return response.data;\n}\n\nexport async function fetchCast(id) {\n    const URL = `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`;\n    const response = await axios.get(URL);\n\n    return response.data.cast;\n;\n}\n\nexport async function fetchReviews(id) {\n    const URL = `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`;\n    const response = await axios.get(URL);\n    const results = response.data.results;\n\n    if (results.length === 0) {\n      throw new Error(\"We don't have any reviews for this movie.\");\n    }\n    return results;\n;\n}"],"names":["List","styled","ErrorMessage","Accent","id","useParams","useState","reviews","setReviews","error","setError","useEffect","fetchReviews","then","movieReviews","catch","message","map","author","content","API_KEY","fetchTrendingMovies","URL","axios","response","data","results","fetchMoviesByName","query","length","Error","fetchMoiveByID","fetchCast","cast"],"sourceRoot":""}